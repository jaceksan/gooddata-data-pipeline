version: 2

models:
  - name: commits
    description: "Commits"
    meta:
      gooddata:
        model_id: github
    columns:
      - name: commit_id
        description: "Commit ID"
        data_type: "INT"
        tests:
          - dbt_constraints.primary_key
        meta:
          gooddata:
            ldm_type: primary_key
      - name: user_id
        data_type: "INT"
        tests:
          - dbt_constraints.foreign_key:
              pk_table_name: ref('users')
              pk_column_name: user_id
        meta:
          gooddata:
            ldm_type: reference
            referenced_table: users
            # TODO is this needed? We do not support multi-column grains/references yet
            # referenced_column_name: user_id
      - name: repo_id
        data_type: "INT"
        tests:
          - dbt_constraints.foreign_key:
              pk_table_name: ref('repos')
              pk_column_name: repo_id
        meta:
          gooddata:
            ldm_type: reference
            referenced_table: repos
            # TODO is this needed? We do not support multi-column grains/references yet
            # referenced_column_name: repo_id
      - name: commit_url
        data_type: "STRING"
        description: "Commit URL"
        meta:
          gooddata:
            ldm_type: label
            label_type: HYPERLINK
            attribute_column: commit_id
      - name: created_at
        data_type: "TIMESTAMP"
        description: "Created at"
        meta:
          gooddata:
            ldm_type: date
      - name: comment_count
        data_type: "INT"
        description: "Comment count"
        meta:
          gooddata:
            ldm_type: fact

# TODO - remove it. dbt metrics are going to be deprecated by dbt, we deprecated it in dbt-gooddata too
metrics:
  - name: count_commits
    label: Count of commits
    description: Count of commits
    model: ref('commits')
    tags:
      - "Metrics dbt"
    meta:
      gooddata:
        model_id: github
        format: "#,##0"

    calculation_method: count_distinct
    expression: commit_id

    timestamp: created_at
    time_grains: [day, week, month, quarter, year]

  - name: count_commit_comments
    label: Count of commit comments
    description: Count of commit comments
    model: ref('commits')
    tags:
      - "Metrics dbt"
    meta:
      gooddata:
        model_id: github
        format: "#,##0"

    calculation_method: sum
    expression: comment_count

    timestamp: created_at
    time_grains: [day, week, month, quarter, year]
