###################
# Templates
.gooddata:
  extends:
    - .base
  # We build a custom image on top of the official dbt image in this pipeline
  # It contains dbt itself, all required dbt plugins and PoC of dbt-gooddata plugin (not yet in pypi, TODO)
  image:
    name: "$DBT_GOODDATA_IMAGE"
    entrypoint: [""]
  stage: analytics
  script:
    - cd $SRC_DATA_PIPELINE
    - dbt-gooddata deploy_analytics $GOODDATA_UPPER_CASE
    - dbt-gooddata test_insights

.gooddata_changes:
  changes:
    - $SRC_DATA_PIPELINE/meltano.yml
    - $SRC_DATA_PIPELINE/macros/**/*
    - $SRC_DATA_PIPELINE/models/**/*
    - $SRC_DATA_PIPELINE/gooddata_layouts/**/*
    - $SRC_DATA_PIPELINE/requirements-gooddata.txt
    - .gitlab-ci/gitlab-ci-analytics.yml

##########################3
# Jobs

# pre-merge
gooddata_dev:
  extends:
    - .gooddata
  variables:
    GOODDATA_ENVIRONMENT_ID: !reference [.envs, dev, GOODDATA_ENVIRONMENT_ID]
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
      changes: !reference [.gooddata_changes, changes]
    - !reference [.base_rules, rules]

# post-merge
gooddata_staging:
  extends:
    - .gooddata
  variables:
    GOODDATA_ENVIRONMENT_ID: !reference [.envs, staging, GOODDATA_ENVIRONMENT_ID]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"'
      changes: !reference [.gooddata_changes, changes]
    - !reference [.base_rules, rules]

gooddata_staging_vertica:
  extends:
    - .gooddata
  variables:
    GOODDATA_ENVIRONMENT_ID: !reference [.envs, staging, GOODDATA_ENVIRONMENT_ID_VERTICA]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"'
      changes: !reference [.gooddata_changes, changes]
    - !reference [.base_rules, rules]

# merge to prod branch
gooddata_prod:
  extends:
    - .gooddata
  variables:
    GOODDATA_ENVIRONMENT_ID: !reference [.envs, prod, GOODDATA_ENVIRONMENT_ID]
  rules:
    - if: '$CI_COMMIT_BRANCH == "prod" && $CI_PIPELINE_SOURCE == "push"'
      changes: !reference [.gooddata_changes, changes]
    - !reference [.base_rules, rules]
