version: '3.8'

services:
  gooddata-cn-ce:
    # You can use "dev_latest" tag which points to the latest development version of GD.CN
    image: gooddata/gooddata-cn-ce:2.2
    ports:
      - "3000:3000"
      - "5432:5432"
    volumes:
      - gooddata-data-pipeline:/data
    environment:
      LICENSE_AND_PRIVACY_POLICY_ACCEPTED: "YES"
      APP_LOGLEVEL: "INFO"
      GDC_FEATURES_VALUES_ENABLE_METRIC_SQL_AND_DATA_EXPLAIN: 'ENABLED'

  bootstrap_db:
    build:
      context: .
      dockerfile: Dockerfile_psql
    entrypoint:
      - psql
      - -f
      - /docker-entrypoint-initdb.d/00_create_db_schema.sql
      - demo
    environment:
      PGDATABASE: demo
      PGHOST: gooddata-cn-ce
      PGPORT: 5432
      PGUSER: demouser
      PGPASSWORD: demopass
    volumes:
      - ./fixtures/postgres:/docker-entrypoint-initdb.d:ro

  extract_load:
    build:
      context: src
      dockerfile: Dockerfile_meltano
    entrypoint:
      - /bin/bash
      - -c
    command:
      - meltano --environment $$MELTANO_ENV run tap-github-repo target-postgres tap-github-org target-postgres
    environment:
      POSTGRES_HOST: gooddata-cn-ce
      POSTGRES_PORT: 5432
      POSTGRES_USER: demouser
      POSTGRES_PASS: demopass
      POSTGRES_DBNAME: demo
      INPUT_SCHEMA: cicd_input_stage
      MELTANO_DATABASE_URI: "postgresql://demouser:demopass@gooddata-cn-ce:5432/demo?options=-csearch_path%3Dmeltano"
      TAP_GITHUB_AUTH_TOKEN: "$GITHUB_TOKEN"
      MELTANO_ENV: cicd_dev_local
volumes:
  gooddata-data-pipeline:
